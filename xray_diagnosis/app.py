import streamlit as st
import tensorflow as tf
import numpy as np
from PIL import Image

# –ö–ª–∞—Å—Å—ã –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π
CLASS_NAMES = [
    'Atelectasis', 'Cardiomegaly', 'Consolidation', 'Edema', 'Effusion',
    'Emphysema', 'Fibrosis', 'Hernia', 'Infiltration', 'Mass',
    'Nodule', 'Pleural_Thickening', 'Pneumonia', 'Pneumothorax'
]

IMG_SIZE = (224, 224)
MODEL_PATH = "xray_model.keras"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –ø–æ —Ä–µ–Ω—Ç–≥–µ–Ω—É", layout="centered")

# –ö–µ—à–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –º–æ–¥–µ–ª–∏
@st.cache_resource
def load_model():
    return tf.keras.models.load_model(MODEL_PATH, compile=False)

# –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
def preprocess_image(image: Image.Image):
    image = image.convert("RGB")
    image = image.resize(IMG_SIZE)
    image_array = np.array(image) / 255.0
    return np.expand_dims(image_array, axis=0)

# –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è CSS
st.markdown("""
    <style>
        .main {
            background-color: #f8f9fa;
        }
        .stButton>button {
            background-color: #4CAF50;
            color: white;
        }
        .stFileUploader {
            margin-top: 1em;
        }
        .prob-card {
            padding: 10px;
            border-radius: 10px;
            background-color: #ffffff;
            margin-bottom: 10px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        }
        .high { color: #d9534f; font-weight: bold; }
        .medium { color: #f0ad4e; font-weight: bold; }
        .low { color: #5bc0de; }
    </style>
""", unsafe_allow_html=True)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("ü©∫ –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –ø–æ —Ä–µ–Ω—Ç–≥–µ–Ω—É")
st.markdown("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥—Ä—É–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏, –∏ –º–æ–¥–µ–ª—å –ø–æ–∫–∞–∂–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è.")

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
uploaded_file = st.file_uploader("üì§ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (JPG/PNG)", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption="üñº –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", use_column_width=True)
    st.markdown("### ‚è≥ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")

    model = load_model()
    preprocessed = preprocess_image(image)
    prediction = model.predict(preprocessed)[0]

    # –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    st.markdown("## üßæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏")
    for name, prob in zip(CLASS_NAMES, prediction):
        percent = prob * 100
        if percent > 60:
            style = "high"
        elif percent > 30:
            style = "medium"
        else:
            style = "low"
        st.markdown(
            f'<div class="prob-card"><span class="{style}">{name}</span>: {percent:.2f}%</div>',
            unsafe_allow_html=True
        )
