import streamlit as st
import tensorflow as tf
import numpy as np
from PIL import Image

# –ö–ª–∞—Å—Å—ã –∏ –ø–µ—Ä–µ–≤–æ–¥—ã
CLASS_NAMES_EN = [
    'Atelectasis', 'Cardiomegaly', 'Consolidation', 'Edema', 'Effusion',
    'Emphysema', 'Fibrosis', 'Hernia', 'Infiltration', 'Mass',
    'Nodule', 'Pleural_Thickening', 'Pneumonia', 'Pneumothorax', 'No Finding'
]

CLASS_NAMES_RU = [
    '–ê—Ç–µ–ª–µ–∫—Ç–∞–∑', '–ö–∞—Ä–¥–∏–æ–º–µ–≥–∞–ª–∏—è', '–ö–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—è', '–û—Ç—ë–∫', '–≠—Ñ—Ñ—É–∑–∏—è',
    '–≠–º—Ñ–∏–∑–µ–º–∞', '–§–∏–±—Ä–æ–∑', '–ì—Ä—ã–∂–∞', '–ò–Ω—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è', '–û–ø—É—Ö–æ–ª—å',
    '–£–∑–µ–ª', '–ü–ª–µ–≤—Ä–∞–ª—å–Ω–æ–µ —É—Ç–æ–ª—â–µ–Ω–∏–µ', '–ü–Ω–µ–≤–º–æ–Ω–∏—è', '–ü–Ω–µ–≤–º–æ—Ç–æ—Ä–∞–∫—Å', '–ë–µ–∑ –ø–∞—Ç–æ–ª–æ–≥–∏–∏'
]

EXPLANATIONS_RU = {
    '–ê—Ç–µ–ª–µ–∫—Ç–∞–∑': "–£—á–∞—Å—Ç–æ–∫ –ª—ë–≥–∫–æ–≥–æ —Å–ø–∞–≤—à–∏–π—Å—è –∏–ª–∏ –±–µ–∑ –≤–æ–∑–¥—É—Ö–∞, —á–∞—Å—Ç–æ –∏–∑-–∑–∞ –æ–±—Å—Ç—Ä—É–∫—Ü–∏–∏ –±—Ä–æ–Ω—Ö–∞.",
    '–ö–∞—Ä–¥–∏–æ–º–µ–≥–∞–ª–∏—è': "–£–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ, –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–¥–µ—á–Ω—É—é –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å.",
    '–ö–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—è': "–£–ø–ª–æ—Ç–Ω–µ–Ω–∏–µ –ª—ë–≥–æ—á–Ω–æ–π —Ç–∫–∞–Ω–∏ –∏–∑-–∑–∞ –≤–æ—Å–ø–∞–ª–µ–Ω–∏—è –∏–ª–∏ –∂–∏–¥–∫–æ—Å—Ç–∏.",
    '–û—Ç—ë–∫': "–ñ–∏–¥–∫–æ—Å—Ç—å –≤ –ª—ë–≥–æ—á–Ω–æ–π —Ç–∫–∞–Ω–∏, —á–∞—Å—Ç–æ –ø—Ä–∏ —Å–µ—Ä–¥–µ—á–Ω–æ–π –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç–∏.",
    '–≠—Ñ—Ñ—É–∑–∏—è': "–°–∫–æ–ø–ª–µ–Ω–∏–µ –∂–∏–¥–∫–æ—Å—Ç–∏ –≤ –ø–ª–µ–≤—Ä–∞–ª—å–Ω–æ–π –ø–æ–ª–æ—Å—Ç–∏.",
    '–≠–º—Ñ–∏–∑–µ–º–∞': "–†–∞–∑—Ä—É—à–µ–Ω–∏–µ –∞–ª—å–≤–µ–æ–ª, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –•–û–ë–õ –∏ –∫—É—Ä–µ–Ω–∏–µ–º.",
    '–§–∏–±—Ä–æ–∑': "–£—Ç–æ–ª—â–µ–Ω–∏–µ –∏ —Ä—É–±—Ü–µ–≤–∞–Ω–∏–µ –ª—ë–≥–æ—á–Ω–æ–π —Ç–∫–∞–Ω–∏.",
    '–ì—Ä—ã–∂–∞': "–í—ã—Ö–æ–¥ –æ—Ä–≥–∞–Ω–æ–≤ —á–µ—Ä–µ–∑ –≥—Ä—É–¥–Ω—É—é —Å—Ç–µ–Ω–∫—É –∏–ª–∏ –¥–∏–∞—Ñ—Ä–∞–≥–º—É.",
    '–ò–Ω—Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è': "–ù–µ—Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∏–Ω—Ñ–µ–∫—Ü–∏–µ–π –∏–ª–∏ –æ–ø—É—Ö–æ–ª—å—é.",
    '–û–ø—É—Ö–æ–ª—å': "–û–±—ä—ë–º–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, —Ç—Ä–µ–±—É—é—â–µ–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏.",
    '–£–∑–µ–ª': "–ú–∞–ª–µ–Ω—å–∫–æ–µ –ø–ª–æ—Ç–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ–±—Ä–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–ª–∏ –∑–ª–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º.",
    '–ü–ª–µ–≤—Ä–∞–ª—å–Ω–æ–µ —É—Ç–æ–ª—â–µ–Ω–∏–µ': "–£—Ç–æ–ª—â–µ–Ω–∏–µ –æ–±–æ–ª–æ—á–µ–∫ –ª—ë–≥–∫–∏—Ö, –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–æ–≥–æ –≤–æ—Å–ø–∞–ª–µ–Ω–∏—è.",
    '–ü–Ω–µ–≤–º–æ–Ω–∏—è': "–ò–Ω—Ñ–µ–∫—Ü–∏—è –ª—ë–≥–æ—á–Ω–æ–π —Ç–∫–∞–Ω–∏.",
    '–ü–Ω–µ–≤–º–æ—Ç–æ—Ä–∞–∫—Å': "–í–æ–∑–¥—É—Ö –≤ –ø–ª–µ–≤—Ä–∞–ª—å–Ω–æ–π –ø–æ–ª–æ—Å—Ç–∏, –≤—ã–∑—ã–≤–∞–µ—Ç —Å–ø–∞–¥–µ–Ω–∏–µ –ª—ë–≥–∫–æ–≥–æ.",
    '–ë–µ–∑ –ø–∞—Ç–æ–ª–æ–≥–∏–∏': "–ü—Ä–∏–∑–Ω–∞–∫–æ–≤ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ."
}

EXPLANATIONS_EN = {
    'Atelectasis': "Collapsed or airless portion of the lung, often due to bronchial obstruction.",
    'Cardiomegaly': "Enlarged heart, may indicate heart failure.",
    'Consolidation': "Lung tissue filled with liquid instead of air due to inflammation.",
    'Edema': "Fluid buildup in lungs, commonly caused by heart failure.",
    'Effusion': "Fluid in the pleural space around the lungs.",
    'Emphysema': "Lung damage from air sac destruction, linked to smoking or COPD.",
    'Fibrosis': "Scarring and thickening of lung tissue.",
    'Hernia': "Protrusion of an organ through the chest wall or diaphragm.",
    'Infiltration': "Nonspecific lung shadowing, may relate to infection or cancer.",
    'Mass': "A larger abnormal growth in the lungs.",
    'Nodule': "A small round spot in the lung, benign or malignant.",
    'Pleural_Thickening': "Thickened lung lining, possibly from chronic inflammation.",
    'Pneumonia': "Infection causing inflammation of the lungs.",
    'Pneumothorax': "Air between lung and chest wall, can collapse the lung.",
    'No Finding': "No abnormalities detected."
}

IMG_SIZE = (224, 224)
MODEL_PATH = "xray_model.keras"

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –ø–æ —Ä–µ–Ω—Ç–≥–µ–Ω—É", layout="centered")

# –ö—ç—à–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å
@st.cache_resource
def load_model():
    return tf.keras.models.load_model(MODEL_PATH, compile=False)

def preprocess_image(image: Image.Image):
    image = image.convert("RGB")
    image = image.resize(IMG_SIZE)
    image_array = np.array(image) / 255.0
    return np.expand_dims(image_array, axis=0)

# –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è
st.markdown("""
    <style>
        .label {
            font-weight: 600;
            font-size: 16px;
        }
        .bar-container {
            background-color: #e0e0e0;
            border-radius: 5px;
            height: 20px;
            margin-top: 5px;
            margin-bottom: 5px;
        }
        .bar {
            height: 100%;
            border-radius: 5px;
        }
        .explanation {
            font-size: 14px;
            color: #ccc;
            margin-bottom: 20px;
        }
    </style>
""", unsafe_allow_html=True)

# –ó–∞–≥–æ–ª–æ–≤–∫–∏
st.title("ü©∫ –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –ø–æ —Ä–µ–Ω—Ç–≥–µ–Ω—É")

# –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —è–∑—ã–∫–∞
lang = st.radio("üåê –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Select language", ["–†—É—Å—Å–∫–∏–π", "English"], horizontal=True)

st.markdown(
    "–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ä–µ–Ω—Ç–≥–µ–Ω–æ–≤—Å–∫–∏–π —Å–Ω–∏–º–æ–∫ –≥—Ä—É–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π."
    if lang == "–†—É—Å—Å–∫–∏–π"
    else "Upload a chest X-ray to get disease probabilities."
)

uploaded_file = st.file_uploader("üì§ –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ / Upload Image", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption="üñº –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" if lang == "–†—É—Å—Å–∫–∏–π" else "üñº Uploaded Image", use_column_width=True)

    st.markdown("### ‚è≥ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ..." if lang == "–†—É—Å—Å–∫–∏–π" else "### ‚è≥ Analyzing image...")

    model = load_model()
    preprocessed = preprocess_image(image)
    prediction = model.predict(preprocessed)[0]
    sorted_indices = np.argsort(-prediction)

    st.markdown("## üßæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏" if lang == "–†—É—Å—Å–∫–∏–π" else "## üßæ Classification Results")

    class_names = CLASS_NAMES_RU if lang == "–†—É—Å—Å–∫–∏–π" else CLASS_NAMES_EN
    explanations = EXPLANATIONS_RU if lang == "–†—É—Å—Å–∫–∏–π" else EXPLANATIONS_EN

    for idx in sorted_indices:
        name = class_names[idx]
        percent = prediction[idx] * 100
        color = "#d9534f" if percent > 60 else "#f0ad4e" if percent > 30 else "#5bc0de"
        explanation = explanations.get(name, "üîç –ù–µ—Ç –æ–±—ä—è—Å–Ω–µ–Ω–∏—è." if lang == "–†—É—Å—Å–∫–∏–π" else "üîç No explanation available.")

       st.markdown(
    f"""
    <div class="label">{name}: <span style='color:{color}'>{percent:.2f}%</span></div>
    <div class="bar-container">
        <div class="bar" style="width:{percent}%; background-color:{color};"></div>
    </div>
    <div class="explanation">{explanation}</div>
    """,
    unsafe_allow_html=True
)

